
outputmakefile:
ifneq ($(srctree),.)
	$(Q)ln -fsn $(srctree) source
	$(Q)$(CONFIG_SHELL) $(srctree)/scripts/mkmakefile $(srctree)
	$(Q)test -e .gitignore || \
	{ echo "# this is build directory, ignore it"; echo "*"; } > .gitignore
endif


output makefile的主要作用是为指定的输出目录生成一份makefile。

ln -fsn 
f 表示删除存在的目标文件，即总是创建一个新的软链接文件
s 创建软链接
n --no-dereference  将链接文件当成一个真实的文件。


$(Q)ln -fsn $(srctree) source
	在当前目录下生成一个source软链接，执行源码
	

$(Q)$(CONFIG_SHELL) $(srctree)/scripts/mkmakefile $(srctree)
	执行/scripts/mkmakefile，传入参数为源码树目录
	

(srctree)/scripts/mkmakefile：

	if [ "${quiet}" != "silent_" ]; then
		echo "  GEN     Makefile"
	fi

	cat << EOF > Makefile
	# Automatically generated by $(realpath $0): don't edit
	include $(realpath $1/Makefile)
	EOF

仅仅是根据quiet变量打印信息，然后 include 源码的Makefile。  

