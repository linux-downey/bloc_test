
KCONFIG_CONFIG 表示 config 目标文件，默认为 .config

这个参数只能由命令行传入覆盖，否则值就是.config.  

*************************************************************************
dot-config默认为1，表示config指令，may-sync-config也默认为1.    

dot-config      := 1
may-sync-config := 1


//不需要依赖config文件的目标
no-dot-config-targets := $(clean-targets) \
			 cscope gtags TAGS tags help% %docs check% coccicheck \
			 $(version_h) headers_% archheaders archscripts \
			 %asm-generic kernelversion %src-pkg


//如果编译目标中存在no-dot-config-targets其中一员，且仅有no-dot-config-targets成员，就将dot-config置0.
ifneq ($(filter $(no-dot-config-targets), $(MAKECMDGOALS)),)
	ifeq ($(filter-out $(no-dot-config-targets), $(MAKECMDGOALS)),)
		dot-config := 0
	endif
endif

//不需要依赖config文件且不需要同步的目标
no-sync-config-targets := $(no-dot-config-targets) install %install \
			   kernelrelease

//如果编译目标中存在no-sync-config-targets其中一员，且仅有no-sync-config-targets成员，就将may-sync-config置0.
ifneq ($(filter $(no-sync-config-targets), $(MAKECMDGOALS)),)
	ifeq ($(filter-out $(no-sync-config-targets), $(MAKECMDGOALS)),)
		may-sync-config := 0
	endif
endif


//只要编译外部模块，就将may-sync-config置0.
ifneq ($(KBUILD_EXTMOD),)
	may-sync-config := 0
endif

*************************************************************************


ifeq ($(dot-config),1)  //编译的目标与config文件有关(默认情况)

ifeq ($(may-sync-config),1)  //编译的目标与config文件有关

include include/config/auto.conf.cmd  (原本没有 需要生成)

$(KCONFIG_CONFIG):                       //在第一次直接执行make且不进行config时，会进入到这里，且上面的include语句报错。  
	@echo >&2 '***'
	@echo >&2 '*** Configuration file "$@" not found!'
	@echo >&2 '***'
	@echo >&2 '*** Please run some configurator (e.g. "make oldconfig" or'
	@echo >&2 '*** "make menuconfig" or "make xconfig").'
	@echo >&2 '***'
	@/bin/false

# The actual configuration files used during the build are stored in
# include/generated/ and include/config/. Update them if .config is newer than
# include/config/auto.conf (which mirrors .config).
#
# This exploits the 'multi-target pattern rule' trick.
# The syncconfig should be executed only once to make all the targets.
%/auto.conf %/auto.conf.cmd %/tristate.conf: $(KCONFIG_CONFIG)
	$(Q)$(MAKE) -f $(srctree)/Makefile syncconfig
	
else
# External modules and some install targets need include/generated/autoconf.h
# and include/config/auto.conf but do not care if they are up-to-date.
# Use auto.conf to trigger the test
PHONY += include/config/auto.conf

include/config/auto.conf:
	$(Q)test -e include/generated/autoconf.h -a -e $@ || (		\
	echo >&2;							\
	echo >&2 "  ERROR: Kernel configuration is invalid.";		\
	echo >&2 "         include/generated/autoconf.h or $@ are missing.";\
	echo >&2 "         Run 'make oldconfig && make prepare' on kernel src to fix it.";	\
	echo >&2 ;							\
	/bin/false)

endif # may-sync-config
endif # $(dot-config)






